{"ast":null,"code":"var _jsxFileName = \"/Users/rahmimuaz/Documents/GitHub/Evolexx/client/src/context/CartContext.jsx\",\n  _s = $RefreshSig$(),\n  _s2 = $RefreshSig$();\nimport React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useUser } from './UserContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CartContext = /*#__PURE__*/createContext();\nexport const useCart = () => {\n  _s();\n  return useContext(CartContext);\n};\n_s(useCart, \"gDsCjeeItUuvgOWf1v4qoK9RF6k=\");\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\nexport const CartProvider = ({\n  children\n}) => {\n  _s2();\n  const [cartItems, setCartItems] = useState([]);\n  const {\n    user\n  } = useUser();\n  useEffect(() => {\n    const fetchCartItems = async () => {\n      if (!user) {\n        setCartItems([]);\n        return;\n      }\n      try {\n        const config = {\n          headers: {\n            Authorization: `Bearer ${user.token}`\n          }\n        };\n        const {\n          data\n        } = await axios.get(`${API_BASE_URL}/api/users/cart`, config);\n        setCartItems(data);\n      } catch (error) {\n        var _error$response, _error$response$data;\n        console.error('Error fetching cart items:', error);\n        toast.error(((_error$response = error.response) === null || _error$response === void 0 ? void 0 : (_error$response$data = _error$response.data) === null || _error$response$data === void 0 ? void 0 : _error$response$data.message) || 'Failed to load cart.');\n      }\n    };\n    fetchCartItems();\n  }, [user]);\n  const addToCart = async (product, quantity) => {\n    if (!user) {\n      toast.error('Please log in to add items to cart.');\n      return;\n    }\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.post(`${API_BASE_URL}/api/users/cart`, {\n        productId: product._id,\n        quantity\n      }, config);\n      setCartItems(data);\n      toast.success(`${quantity} of ${product.name} added to cart!`);\n    } catch (error) {\n      var _error$response2, _error$response2$data;\n      console.error('Error adding to cart:', error);\n      toast.error(((_error$response2 = error.response) === null || _error$response2 === void 0 ? void 0 : (_error$response2$data = _error$response2.data) === null || _error$response2$data === void 0 ? void 0 : _error$response2$data.message) || 'Failed to add item to cart.');\n    }\n  };\n  const removeFromCart = async productId => {\n    if (!user) {\n      toast.error('Please log in to remove items from cart.');\n      return;\n    }\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.delete(`${API_BASE_URL}/api/users/cart/${productId}`, config);\n      setCartItems(data);\n      toast.success('Item removed from cart.');\n    } catch (error) {\n      var _error$response3, _error$response3$data;\n      console.error('Error removing from cart:', error);\n      toast.error(((_error$response3 = error.response) === null || _error$response3 === void 0 ? void 0 : (_error$response3$data = _error$response3.data) === null || _error$response3$data === void 0 ? void 0 : _error$response3$data.message) || 'Failed to remove item from cart.');\n    }\n  };\n  const updateQuantity = async (productId, newQuantity) => {\n    if (!user) {\n      toast.error('Please log in to update cart.');\n      return;\n    }\n    if (newQuantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      const {\n        data\n      } = await axios.put(`${API_BASE_URL}/api/users/cart`, {\n        productId,\n        quantity: newQuantity\n      }, config);\n      setCartItems(data);\n      toast.success('Cart quantity updated.');\n    } catch (error) {\n      var _error$response4, _error$response4$data;\n      console.error('Error updating quantity:', error);\n      toast.error(((_error$response4 = error.response) === null || _error$response4 === void 0 ? void 0 : (_error$response4$data = _error$response4.data) === null || _error$response4$data === void 0 ? void 0 : _error$response4$data.message) || 'Failed to update quantity.');\n    }\n  };\n  const clearCart = async () => {\n    if (!user) {\n      toast.error('Please log in to clear cart.');\n      return;\n    }\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`\n        }\n      };\n      await axios.delete(`${API_BASE_URL}/api/users/cart`, config);\n      setCartItems([]);\n      toast.success('Cart cleared successfully.');\n    } catch (error) {\n      var _error$response5, _error$response5$data;\n      console.error('Error clearing cart:', error);\n      toast.error(((_error$response5 = error.response) === null || _error$response5 === void 0 ? void 0 : (_error$response5$data = _error$response5.data) === null || _error$response5$data === void 0 ? void 0 : _error$response5$data.message) || 'Failed to clear cart.');\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(CartContext.Provider, {\n    value: {\n      cartItems,\n      addToCart,\n      removeFromCart,\n      updateQuantity,\n      clearCart\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 139,\n    columnNumber: 5\n  }, this);\n};\n_s2(CartProvider, \"nqoTWLGbgt8xo3eQwfIhPY4r8yw=\", false, function () {\n  return [useUser];\n});\n_c = CartProvider;\nvar _c;\n$RefreshReg$(_c, \"CartProvider\");","map":{"version":3,"names":["React","createContext","useState","useContext","useEffect","axios","toast","useUser","jsxDEV","_jsxDEV","CartContext","useCart","_s","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","CartProvider","children","_s2","cartItems","setCartItems","user","fetchCartItems","config","headers","Authorization","token","data","get","error","_error$response","_error$response$data","console","response","message","addToCart","product","quantity","post","productId","_id","success","name","_error$response2","_error$response2$data","removeFromCart","delete","_error$response3","_error$response3$data","updateQuantity","newQuantity","put","_error$response4","_error$response4$data","clearCart","_error$response5","_error$response5$data","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/rahmimuaz/Documents/GitHub/Evolexx/client/src/context/CartContext.jsx"],"sourcesContent":["import React, { createContext, useState, useContext, useEffect } from 'react';\nimport axios from 'axios';\nimport { toast } from 'react-toastify';\nimport { useUser } from './UserContext';\n\nconst CartContext = createContext();\nexport const useCart = () => useContext(CartContext);\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nexport const CartProvider = ({ children }) => {\n  const [cartItems, setCartItems] = useState([]);\n  const { user } = useUser();\n\n  useEffect(() => {\n    const fetchCartItems = async () => {\n      if (!user) {\n        setCartItems([]);\n        return;\n      }\n\n      try {\n        const config = {\n          headers: {\n            Authorization: `Bearer ${user.token}`,\n          },\n        };\n        const { data } = await axios.get(`${API_BASE_URL}/api/users/cart`, config);\n        setCartItems(data);\n      } catch (error) {\n        console.error('Error fetching cart items:', error);\n        toast.error(error.response?.data?.message || 'Failed to load cart.');\n      }\n    };\n\n    fetchCartItems();\n  }, [user]);\n\n  const addToCart = async (product, quantity) => {\n    if (!user) {\n      toast.error('Please log in to add items to cart.');\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.post(\n        `${API_BASE_URL}/api/users/cart`,\n        { productId: product._id, quantity },\n        config\n      );\n      setCartItems(data);\n      toast.success(`${quantity} of ${product.name} added to cart!`);\n    } catch (error) {\n      console.error('Error adding to cart:', error);\n      toast.error(error.response?.data?.message || 'Failed to add item to cart.');\n    }\n  };\n\n  const removeFromCart = async (productId) => {\n    if (!user) {\n      toast.error('Please log in to remove items from cart.');\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.delete(`${API_BASE_URL}/api/users/cart/${productId}`, config);\n      setCartItems(data);\n      toast.success('Item removed from cart.');\n    } catch (error) {\n      console.error('Error removing from cart:', error);\n      toast.error(error.response?.data?.message || 'Failed to remove item from cart.');\n    }\n  };\n\n  const updateQuantity = async (productId, newQuantity) => {\n    if (!user) {\n      toast.error('Please log in to update cart.');\n      return;\n    }\n\n    if (newQuantity <= 0) {\n      removeFromCart(productId);\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          'Content-Type': 'application/json',\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      const { data } = await axios.put(\n        `${API_BASE_URL}/api/users/cart`,\n        { productId, quantity: newQuantity },\n        config\n      );\n      setCartItems(data);\n      toast.success('Cart quantity updated.');\n    } catch (error) {\n      console.error('Error updating quantity:', error);\n      toast.error(error.response?.data?.message || 'Failed to update quantity.');\n    }\n  };\n\n  const clearCart = async () => {\n    if (!user) {\n      toast.error('Please log in to clear cart.');\n      return;\n    }\n\n    try {\n      const config = {\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n        },\n      };\n      await axios.delete(`${API_BASE_URL}/api/users/cart`, config);\n      setCartItems([]);\n      toast.success('Cart cleared successfully.');\n    } catch (error) {\n      console.error('Error clearing cart:', error);\n      toast.error(error.response?.data?.message || 'Failed to clear cart.');\n    }\n  };\n\n  return (\n    <CartContext.Provider\n      value={{ cartItems, addToCart, removeFromCart, updateQuantity, clearCart }}\n    >\n      {children}\n    </CartContext.Provider>\n  );\n};\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}