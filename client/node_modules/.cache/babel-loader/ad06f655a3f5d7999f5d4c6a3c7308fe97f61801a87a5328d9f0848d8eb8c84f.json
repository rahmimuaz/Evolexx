{"ast":null,"code":"import React,{useState}from'react';import{toast}from'react-toastify';import{useUser}from'../../context/UserContext';import'./BankTransferModal.css';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const API_BASE_URL=process.env.REACT_APP_API_BASE_URL;const BankTransferModal=_ref=>{let{onClose,onSubmit}=_ref;const[selectedFile,setSelectedFile]=useState(null);const[previewUrl,setPreviewUrl]=useState(null);const[uploading,setUploading]=useState(false);const[error,setError]=useState('');const{user}=useUser();const handleFileChange=e=>{const file=e.target.files[0];if(file){if(file.size>5*1024*1024){setSelectedFile(null);setPreviewUrl(null);setError('File size too large. Maximum size is 5MB.');toast.error('File size too large. Maximum size is 5MB.');return;}if(file.type==='application/pdf'||file.type.startsWith('image/')){setSelectedFile(file);setPreviewUrl(URL.createObjectURL(file));setError('');}else{setSelectedFile(null);setPreviewUrl(null);setError('Please upload a PDF or an image file (JPG, PNG, GIF).');toast.error('Please upload a PDF or an image file (JPG, PNG, GIF).');}}else{setSelectedFile(null);setPreviewUrl(null);setError('');}};const handleSubmit=async()=>{if(!selectedFile){setError('Please attach your bank transfer proof (PDF or Image).');toast.error('Please attach your bank transfer proof (PDF or Image).');return;}if(!user||!user.token){setError('Please log in to upload files.');toast.error('Please log in to upload files.');return;}setUploading(true);setError('');try{const formData=new FormData();formData.append('proof',selectedFile);console.log('Uploading file:',{fileName:selectedFile.name,fileSize:selectedFile.size,fileType:selectedFile.type});const response=await fetch(\"\".concat(API_BASE_URL,\"/api/upload/bank-transfer-proof\"),{method:'POST',headers:{'Authorization':\"Bearer \".concat(user.token)},body:formData});console.log('Upload response status:',response.status);if(!response.ok){const errorData=await response.json();console.error('Upload error response:',errorData);throw new Error(errorData.message||'Upload failed');}const data=await response.json();console.log('Upload success response:',data);toast.success('File uploaded successfully! Proceeding with order placement.');onSubmit(data.fileUrl);onClose();}catch(uploadError){console.error('File upload failed:',uploadError);setError(uploadError.message||'Failed to upload file. Please try again.');toast.error(uploadError.message||'Failed to upload file. Please try again.');}finally{setUploading(false);}};return/*#__PURE__*/_jsx(\"div\",{className:\"modal-overlay\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"modal-content\",children:[/*#__PURE__*/_jsx(\"h2\",{className:\"modal-title\",children:\"Bank Transfer Confirmation\"}),/*#__PURE__*/_jsx(\"p\",{className:\"modal-description\",children:\"Please transfer the total amount to the following bank details and attach a screenshot or PDF of the transfer confirmation.\"}),/*#__PURE__*/_jsxs(\"div\",{className:\"bank-details-box\",children:[/*#__PURE__*/_jsx(\"p\",{children:\"Bank Name: Example Bank PLC\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Account Name: Your Company Name\"}),/*#__PURE__*/_jsx(\"p\",{children:\"Account Number: 1234 5678 9012 3456\"}),/*#__PURE__*/_jsx(\"p\",{children:\"SWIFT/BIC: EXABXXYY\"})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"file-upload-section\",children:[/*#__PURE__*/_jsx(\"label\",{htmlFor:\"transferProof\",className:\"file-upload-label\",children:\"Attach Transfer Proof (PDF or Image - Max 5MB)\"}),/*#__PURE__*/_jsx(\"input\",{type:\"file\",id:\"transferProof\",accept:\"image/*, application/pdf\",onChange:handleFileChange,className:\"file-input\"}),selectedFile&&/*#__PURE__*/_jsxs(\"p\",{className:\"selected-file-name\",children:[\"Selected file: \",selectedFile.name,\" (\",(selectedFile.size/1024/1024).toFixed(2),\" MB)\"]}),previewUrl&&selectedFile&&selectedFile.type.startsWith('image/')&&/*#__PURE__*/_jsx(\"div\",{className:\"preview-container\",children:/*#__PURE__*/_jsx(\"img\",{src:previewUrl,alt:\"File Preview\",className:\"image-preview\"})}),previewUrl&&selectedFile&&selectedFile.type==='application/pdf'&&/*#__PURE__*/_jsx(\"div\",{className:\"preview-container\",children:/*#__PURE__*/_jsx(\"p\",{className:\"pdf-info\",children:\"PDF file attached. Preview not available here.\"})}),error&&/*#__PURE__*/_jsx(\"p\",{className:\"error-message\",children:error})]}),/*#__PURE__*/_jsxs(\"div\",{className:\"modal-actions\",children:[/*#__PURE__*/_jsx(\"button\",{onClick:onClose,className:\"modal-button cancel-button\",children:\"Cancel\"}),/*#__PURE__*/_jsx(\"button\",{onClick:handleSubmit,disabled:!selectedFile||uploading,className:\"modal-button confirm-button\",children:uploading?'Uploading...':'Confirm Transfer'})]})]})});};export default BankTransferModal;","map":{"version":3,"names":["React","useState","toast","useUser","jsx","_jsx","jsxs","_jsxs","API_BASE_URL","process","env","REACT_APP_API_BASE_URL","BankTransferModal","_ref","onClose","onSubmit","selectedFile","setSelectedFile","previewUrl","setPreviewUrl","uploading","setUploading","error","setError","user","handleFileChange","e","file","target","files","size","type","startsWith","URL","createObjectURL","handleSubmit","token","formData","FormData","append","console","log","fileName","name","fileSize","fileType","response","fetch","concat","method","headers","body","status","ok","errorData","json","Error","message","data","success","fileUrl","uploadError","className","children","htmlFor","id","accept","onChange","toFixed","src","alt","onClick","disabled"],"sources":["/Users/rahmimuaz/Downloads/Evolexx-inventory 3/client/src/pages/Payment/BankTransferModal.jsx"],"sourcesContent":["import React, { useState } from 'react';\nimport { toast } from 'react-toastify';\nimport { useUser } from '../../context/UserContext';\nimport './BankTransferModal.css';\n\nconst API_BASE_URL = process.env.REACT_APP_API_BASE_URL;\n\nconst BankTransferModal = ({ onClose, onSubmit }) => {\n  const [selectedFile, setSelectedFile] = useState(null);\n  const [previewUrl, setPreviewUrl] = useState(null);\n  const [uploading, setUploading] = useState(false);\n  const [error, setError] = useState('');\n  const { user } = useUser();\n\n  const handleFileChange = (e) => {\n    const file = e.target.files[0];\n    if (file) {\n      if (file.size > 5 * 1024 * 1024) {\n        setSelectedFile(null);\n        setPreviewUrl(null);\n        setError('File size too large. Maximum size is 5MB.');\n        toast.error('File size too large. Maximum size is 5MB.');\n        return;\n      }\n\n      if (file.type === 'application/pdf' || file.type.startsWith('image/')) {\n        setSelectedFile(file);\n        setPreviewUrl(URL.createObjectURL(file));\n        setError('');\n      } else {\n        setSelectedFile(null);\n        setPreviewUrl(null);\n        setError('Please upload a PDF or an image file (JPG, PNG, GIF).');\n        toast.error('Please upload a PDF or an image file (JPG, PNG, GIF).');\n      }\n    } else {\n      setSelectedFile(null);\n      setPreviewUrl(null);\n      setError('');\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!selectedFile) {\n      setError('Please attach your bank transfer proof (PDF or Image).');\n      toast.error('Please attach your bank transfer proof (PDF or Image).');\n      return;\n    }\n\n    if (!user || !user.token) {\n      setError('Please log in to upload files.');\n      toast.error('Please log in to upload files.');\n      return;\n    }\n\n    setUploading(true);\n    setError('');\n\n    try {\n      const formData = new FormData();\n      formData.append('proof', selectedFile);\n\n      console.log('Uploading file:', {\n        fileName: selectedFile.name,\n        fileSize: selectedFile.size,\n        fileType: selectedFile.type\n      });\n\n      const response = await fetch(`${API_BASE_URL}/api/upload/bank-transfer-proof`, {\n        method: 'POST',\n        headers: {\n          'Authorization': `Bearer ${user.token}`,\n        },\n        body: formData,\n      });\n\n      console.log('Upload response status:', response.status);\n\n      if (!response.ok) {\n        const errorData = await response.json();\n        console.error('Upload error response:', errorData);\n        throw new Error(errorData.message || 'Upload failed');\n      }\n\n      const data = await response.json();\n      console.log('Upload success response:', data);\n      \n      toast.success('File uploaded successfully! Proceeding with order placement.');\n      onSubmit(data.fileUrl);\n      onClose();\n    } catch (uploadError) {\n      console.error('File upload failed:', uploadError);\n      setError(uploadError.message || 'Failed to upload file. Please try again.');\n      toast.error(uploadError.message || 'Failed to upload file. Please try again.');\n    } finally {\n      setUploading(false);\n    }\n  };\n\n  return (\n    <div className=\"modal-overlay\">\n      <div className=\"modal-content\">\n        <h2 className=\"modal-title\">Bank Transfer Confirmation</h2>\n        <p className=\"modal-description\">\n          Please transfer the total amount to the following bank details and attach a screenshot or PDF of the transfer confirmation.\n        </p>\n\n        <div className=\"bank-details-box\">\n          <p>Bank Name: Example Bank PLC</p>\n          <p>Account Name: Your Company Name</p>\n          <p>Account Number: 1234 5678 9012 3456</p>\n          <p>SWIFT/BIC: EXABXXYY</p>\n        </div>\n\n        <div className=\"file-upload-section\">\n          <label htmlFor=\"transferProof\" className=\"file-upload-label\">\n            Attach Transfer Proof (PDF or Image - Max 5MB)\n          </label>\n          <input\n            type=\"file\"\n            id=\"transferProof\"\n            accept=\"image/*, application/pdf\"\n            onChange={handleFileChange}\n            className=\"file-input\"\n          />\n          {selectedFile && (\n            <p className=\"selected-file-name\">Selected file: {selectedFile.name} ({(selectedFile.size / 1024 / 1024).toFixed(2)} MB)</p>\n          )}\n          {previewUrl && selectedFile && selectedFile.type.startsWith('image/') && (\n            <div className=\"preview-container\">\n              <img src={previewUrl} alt=\"File Preview\" className=\"image-preview\" />\n            </div>\n          )}\n          {previewUrl && selectedFile && selectedFile.type === 'application/pdf' && (\n            <div className=\"preview-container\">\n              <p className=\"pdf-info\">PDF file attached. Preview not available here.</p>\n            </div>\n          )}\n\n          {error && (\n            <p className=\"error-message\">{error}</p>\n          )}\n        </div>\n\n        <div className=\"modal-actions\">\n          <button\n            onClick={onClose}\n            className=\"modal-button cancel-button\"\n          >\n            Cancel\n          </button>\n          <button\n            onClick={handleSubmit}\n            disabled={!selectedFile || uploading}\n            className=\"modal-button confirm-button\"\n          >\n            {uploading ? 'Uploading...' : 'Confirm Transfer'}\n          </button>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default BankTransferModal;\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}